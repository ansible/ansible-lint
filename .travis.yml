conditions: v1
dist: xenial

git:
  depth: 100

cache:
  pip: true
  directories:
  - $HOME/.cache/pre-commit
  - $HOME/.pre-commit
  - $HOME/virtualenv/python$(python -c 'import platform; print(platform.python_version())')
  - $HOME/Library/Caches/Homebrew

language: python

.mixtures:  # is not used by Travis CI, but helps avoid duplication
- &if-cron-or-manual-run-or-tagged
  if: type IN (cron, api) OR tag IS present
- &reset-prerequisites
  before_install: []

jobs:
  fast_finish: true

  include:
  - python: "3.8"
    <<: *reset-prerequisites
    name: Running linters
    env:
      TOXENV: lint
  - python: "3.8"
    <<: *reset-prerequisites
    name: Running docs building checks
    env:
      TOXENV: docs

  - python: "3.8"
    env:
      ANSIBLE_VERSION: "29"

  - python: "3.7"
    <<: *if-cron-or-manual-run-or-tagged
    env:
      ANSIBLE_VERSION: "29"

  - python: "3.6"
    <<: *if-cron-or-manual-run-or-tagged
    env:
      ANSIBLE_VERSION: "29"

  - python: "3.8"
    env:
      ANSIBLE_VERSION: "28"

  - python: "3.7"
    <<: *if-cron-or-manual-run-or-tagged
    env:
      ANSIBLE_VERSION: "28"

  - python: "3.6"
    <<: *if-cron-or-manual-run-or-tagged
    env:
      ANSIBLE_VERSION: "28"

  - python: "3.8"
    <<: *if-cron-or-manual-run-or-tagged
    env:
      ANSIBLE_VERSION: devel

  - python: "3.7"
    <<: *if-cron-or-manual-run-or-tagged
    env:
      ANSIBLE_VERSION: devel

  - python: "3.6"
    <<: *if-cron-or-manual-run-or-tagged
    env:
      ANSIBLE_VERSION: devel

env:
  global:
    TOXENV_TMPL: "'ansible${ANSIBLE_VERSION}'"

before_install:
- export TOXENV=$(echo $TOXENV_TMPL | envsubst)
install:
- pip install -U tox virtualenv  # newer virtualenv has newer pip inside
- tox --notest  # Pre-populate virtualenv

script:
- tox -v
