[flake8]

# Don't even try to analyze these:
extend-exclude =
  # No need to traverse egg info dir
  *.egg-info,
  # GitHub configs
  .github,
  # Cache files of MyPy
  .mypy_cache,
  # Cache files of pytest
  .pytest_cache,
  # Temp dir of pytest-testmon
  .tmontmp,
  # Occasional virtualenv dir
  .venv
  # VS Code
  .vscode,
  # Temporary build dir
  build,
  # This contains sdists and wheels of ansible-lint that we don't want to check
  dist,
  # Occasional virtualenv dir
  env,
  # Metadata of `pip wheel` cmd is autogenerated
  pip-wheel-metadata,

# Let's not overcomplicate the code:
max-complexity = 10

# Accessibility/large fonts and PEP8 friendly:
#max-line-length = 79
# Accessibility/large fonts and PEP8 unfriendly:
max-line-length = 100

# The only allowed ignores are related to black and isort
# https://black.readthedocs.io/en/stable/the_black_code_style.html#line-length
# "H" are generated by hacking plugin, which is not black compatible
extend-ignore =
  E203,
  E501,
  H,
# WPS:
  B006,  # Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
  B007,  # Loop control variable 'subdirs' not used within the loop body. If this is intended, start the name with an underscore.
  B008,  # Do not perform function calls in argument defaults.  The call is performed only once at function definition time. All calls to your function will reuse the result of that definition-time function call.  If this is intended, assign the function call to a module-level variable and use that variable as a default value.
  B010,  # Do not call setattr with a constant attribute value, it is not any safer than normal property access.
  B014,  # Redundant exception types in `except (ImportError, ModuleNotFoundError) as e:`.  Write `except ImportError as e:`, which catches exactly the same exceptions.
  C405,  # Unnecessary list literal - rewrite as a set literal.
  C408,  # Unnecessary dict call - rewrite as a literal.
  DAR101,
  DAR201,
  DAR301,
  DAR401,
  E800,
  N806,
  P101,
  P103,
  WPS100,  # Found wrong module name
  WPS102,  # Found incorrect module name pattern
  WPS110,  # Found wrong variable name
  WPS111,  # Found too short name
  WPS114,  # Found underscored number name pattern
  WPS115,  # Found upper-case constant in a class
  WPS116,  # Found consecutive underscores name
  WPS118,  # Found too long name
  WPS121,  # Found usage of a variable marked as unused
  WPS122,  # Found all unused variables definition
  WPS201,  # Found module with too many imports
  WPS202,  # Found too many module members
  WPS204,  # Found overused expression
  WPS210,  # Found too many local variables
  WPS211,  # Found too many arguments
  WPS212,  # Found too many return statements
  WPS213,  # Found too many expressions
  WPS214,  # Found too many methods
  WPS218,  # Found too many `assert` statements
  WPS220,  # Found too deep nesting
  WPS221,  # Found line with high Jones Complexity
  WPS222,  # Found a condition with too much logic
  WPS226,  # Found string literal over-use
  WPS227,  # Found too long function output tuple
  WPS229,  # Found too long ``try`` body length
  WPS230,  # Found too many public instance attributes
  WPS231,  # Found function with too much cognitive complexity
  WPS232,  # Found module cognitive complexity that is too high
  WPS234,  # Found overly complex annotation
  WPS235,  # Found too many imported names from a module
  WPS237,  # Found a too complex `f` string
  WPS300,  # Found local folder import
  WPS301,  # Found dotted raw import
  WPS302,  # Found unicode string prefix
  WPS305,  # Found `f` string
  WPS306,  # Found class without a base class
  WPS309,  # Found reversed compare order
  WPS317,  # Found incorrect multi-line parameters
  WPS318,  # Found extra indentation
  WPS323,  # Found `%` string formatting
  WPS324,  # Found inconsistent `return` statement
  WPS326,  # Found implicit string concatenation
  WPS328,  # Found useless node
  WPS331,  # Found variables that are only used for `return`
  WPS335,  # Found incorrect `for` loop iter type
  WPS336,  # Found explicit string concatenation
  WPS337,  # Found multiline conditions
  WPS338,  # Found incorrect order of methods in a class
  WPS342,  # Found implicit raw string
  WPS350,  # Found usable augmented assign pattern
  WPS352,  # Found multiline loop
  WPS355,  # Found an unnecessary blank line before a bracket
  WPS360,  # Found an unnecessary use of a raw string
  WPS361,  # Found an inconsistently structured comprehension
  WPS362,  # Found assignment to a subscript slice
  WPS400,  # Found wrong magic comment
  WPS404,  # Found complex default value
  WPS407,  # Found mutable module constant
  WPS410,  # Found wrong metadata variable
  WPS412,  # Found `__init__.py` module with logic
  WPS414,  # Found incorrect unpacking target
  WPS417,  # Found non-unique item in hash
  WPS420,  # Found wrong keyword
  WPS421,  # Found wrong function call
  WPS425,  # Found boolean non-keyword argument
  WPS429,  # Found multiple assign targets
  WPS430,  # Found nested function
  WPS432,  # Found magic number
  WPS433,  # Found nested import
  WPS436,  # Found protected module import
  WPS437,  # Found protected attribute usage
  WPS440,  # Found block variables overlap
  WPS441,  # Found control variable used after block
  WPS442,  # Found outer scope names shadowing
  WPS448,  # Found incorrect exception order
  WPS450,  # Found protected object import
  WPS453,  # Found executable mismatch
  WPS458,  # Found imports collision
  WPS462,  # Wrong multiline string usage
  WPS464,  # Found empty comment
  WPS504,  # Found negated condition
  WPS505,  # Found nested `try` block
  WPS507,  # Found useless `len()` compare
  WPS508,  # Found incorrect `not` with compare usage
  WPS510,  # Found `in` used with a non-set container
  WPS514,  # Found implicit `in` condition
  WPS517,  # Found pointless starred expression
  WPS519,  # Found implicit `sum()` call
  WPS520,  # Found compare with falsy constant
  WPS525,  # Found wrong `in` compare with single item container
  WPS526,  # Found implicit `yield from` usage
  WPS527,  # Found not a tuple used as an argument
  WPS529,  # Found implicit `.get()` dict usage
  WPS531,  # Found simplifiable returning `if` condition in a function
  WPS601,  # Found shadowed class attribute
  WPS602,  # Found using `@staticmethod`
  WPS604,  # Found incorrect node inside `class` body
  WPS609,  # Found direct magic attribute usage

# Allow certain violations in certain files:
per-file-ignores =
  # There are multiple `assert`s (S101)
  # and subprocesses (import – S404; call – S603) in tests;
  # plus, some of the rules may have embeded tests;
  # also, using fixtures looks like shadowing the outer scope (WPS442);
  # and finally it's impossible to have <= members in tests (WPS202):
  src/ansiblelint/rules/**.py: S101
  src/ansiblelint/testing/__init__.py: S404, S603
  src/ansiblelint/testing/fixtures.py: S101
  test/**.py: S101, S404, S603, WPS202, WPS442
  test/custom_rules/**.py: WPS
  test/local-content/**.py: WPS

  # FIXME: D100 Missing docstring in public module
  # FIXME: D101 Missing docstring in public class
  # FIXME: D102 Missing docstring in public method
  # FIXME: drop these once they're made simpler
  # Ref: https://github.com/ansible-community/ansible-lint/issues/744
  src/ansiblelint/cli.py: D101 D102
  src/ansiblelint/formatters/__init__.py: D101 D102
  src/ansiblelint/rules/*.py: D100 D101 D102
  src/ansiblelint/rules/__init__.py: D100 D101 D102
  src/ansiblelint/rules/BecomeUserWithoutBecomeRule.py: D100 D101 D102
  src/ansiblelint/rules/CommandHasChangesCheckRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/CommandsInsteadOfArgumentsRule.py: D100 D101 D102
  src/ansiblelint/rules/CommandsInsteadOfModulesRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/ComparisonToEmptyStringRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/ComparisonToLiteralBoolRule.py: D100 D101 D102
  src/ansiblelint/rules/DeprecatedModuleRule.py: D100 D101 D102
  src/ansiblelint/rules/EnvVarsInCommandRule.py: D100 D101 D102
  src/ansiblelint/rules/FQCNBuiltinsRule.py: D101 D102 S101
  src/ansiblelint/rules/GitHasVersionRule.py: D100 D101 D102
  src/ansiblelint/rules/IgnoreErrorsRule.py: D102 S101
  src/ansiblelint/rules/MercurialHasRevisionRule.py: D100 D101 D102
  src/ansiblelint/rules/MetaChangeFromDefaultRule.py: D100 D101 D102
  src/ansiblelint/rules/MetaMainHasInfoRule.py: D100 D101 D102
  src/ansiblelint/rules/MetaTagValidRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/MetaVideoLinksRule.py: D100 D101 D102
  src/ansiblelint/rules/MissingFilePermissionsRule.py: D101 D102 S101
  src/ansiblelint/rules/NestedJinjaRule.py: D100 D101 D102
  src/ansiblelint/rules/NoFormattingInWhenRule.py: D100 D101 D102
  src/ansiblelint/rules/NoLogPasswordsRule.py: D102 S101
  src/ansiblelint/rules/NoSameOwnerRule.py: D101 S101
  src/ansiblelint/rules/NoTabsRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/OctalPermissionsRule.py: D100 D101 D102
  src/ansiblelint/rules/PackageIsNotLatestRule.py: D100 D101 D102
  src/ansiblelint/rules/PlaybookExtension.py: D100 D101 D102
  src/ansiblelint/rules/RoleNames.py: D100 D101 D102
  src/ansiblelint/rules/RoleRelativePath.py: D100 D101 D102
  src/ansiblelint/rules/ShellWithoutPipefail.py: D100 D101 D102
  src/ansiblelint/rules/TaskHasNameRule.py: D100 D101 D102
  src/ansiblelint/rules/TaskNoLocalAction.py: D100 D101 D102
  src/ansiblelint/rules/UseCommandInsteadOfShellRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/UseHandlerRatherThanWhenChangedRule.py: D101 D102 S101
  src/ansiblelint/rules/UsingBareVariablesIsDeprecatedRule.py: D100 D101 D102
  src/ansiblelint/rules/VariableHasSpacesRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/VariableNamingRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/YamllintRule.py: D100 D101

  # FIXME: drop these once they're fixed
  # Ref: https://github.com/ansible-community/ansible-lint/issues/725
  test/__init__.py: D102
  test/conftest.py: D100
  test/rules/EMatcherRule.py: D100 D101 D102
  test/rules/UnsetVariableMatcherRule.py: D100 D101 D102
  test/TestAnsibleLintRule.py: D100 S101
  test/TestBaseFormatter.py: D100 S101
  test/TestBecomeUserWithoutBecome.py: D100 D101 D102 S101
  test/TestCliRolePaths.py: D100 D101 D102 S101
  test/TestCommandLineInvocationSameAsConfig.py: D100 S101
  test/TestCommandHasChangesCheck.py: D100 D101 D102 S101
  test/TestComparisonToLiteralBool.py: D100 D101 D102 S101
  test/TestDependenciesInMeta.py: D100 S101
  test/TestDeprecatedModule.py: D100 D101 D102 S101
  test/TestEnvVarsInCommand.py: D100 D101 D102 S101
  test/TestFormatter.py: D100 D101 D102
  test/TestImportIncludeRole.py: D100 S101
  test/TestImportWithMalformed.py: D100 S101
  test/TestIncludeMissFileWithRole.py: D100 S101
  test/TestLineTooLong.py: D100 D101 D102 S101
  test/TestLintRule.py: D100 D101 D102 S101
  test/TestNestedJinjaRule.py: D100 S101
  test/TestMatchError.py: D101 S101
  test/TestMetaChangeFromDefault.py: D100 D101 D102 S101
  test/TestMetaMainHasInfo.py: D100 D101 D102 S101
  test/TestMetaVideoLinks.py: D100 D101 D102 S101
  test/TestNoFormattingInWhenRule.py: D100 D101 D102 S101
  test/TestOctalPermissions.py: D100 D101 D102 S101
  test/TestPackageIsNotLatest.py: D100 D101 D102 S101
  test/TestRoleRelativePath.py: D100 D101 D102 S101
  test/TestRuleProperties.py: D100 S101
  test/TestRulesCollection.py: D100 S101
  test/TestRunner.py: D100 S101
  test/TestShellWithoutPipefail.py: D100 D101 D102 S101
  test/TestSkipImportPlaybook.py: D100 S101
  test/TestSkipInsideYaml.py: D100 S101
  test/TestSkipPlaybookItems.py: D100 S101
  test/TestTaskHasName.py: D100 D101 D102 S101
  test/TestTaskIncludes.py: D100 S101
  test/TestTaskNoLocalAction.py: D100 D101 D102 S101
  test/TestUseHandlerRatherThanWhenChanged.py: D100 D101 D102 S101
  test/TestUsingBareVariablesIsDeprecated.py: D100 D101 D102 S101
  test/TestWithSkipTagId.py: D100 D101 D102 S101

# flake8-eradicate
# E800:
eradicate-whitelist-extend = isort:\s+\w+

# flake8-pytest-style
# PT001:
pytest-fixture-no-parentheses = true
# PT006:
pytest-parametrize-names-type = tuple
# PT007:
pytest-parametrize-values-type = tuple
pytest-parametrize-values-row-type = tuple
# PT023:
pytest-mark-no-parentheses = true

# flake8-quotes
avoid-escape = true
inline-quotes = '
multiline-quotes = """
