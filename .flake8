[flake8]

# Don't even try to analyze these:
extend-exclude =
  # No need to traverse egg info dir
  *.egg-info,
  # GitHub configs
  .github,
  # Cache files of MyPy
  .mypy_cache,
  # Cache files of pytest
  .pytest_cache,
  # Temp dir of pytest-testmon
  .tmontmp,
  # Occasional virtualenv dir
  .venv
  # VS Code
  .vscode,
  # Temporary build dir
  build,
  # This contains sdists and wheels of ansible-lint that we don't want to check
  dist,
  # Occasional virtualenv dir
  env,
  # Metadata of `pip wheel` cmd is autogenerated
  pip-wheel-metadata,

# Let's not overcomplicate the code:
max-complexity = 10

# Accessibility/large fonts and PEP8 friendly:
#max-line-length = 79
# Accessibility/large fonts and PEP8 unfriendly:
max-line-length = 100

# The only allowed ignores are related to black and isort
# https://black.readthedocs.io/en/stable/the_black_code_style.html#line-length
# "H" are generated by hacking plugin, which is not black compatible
extend-ignore =
  E203,
  E501,
  H,
# WPS:
  B006,  # Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
  B007,  # Loop control variable 'subdirs' not used within the loop body. If this is intended, start the name with an underscore.
  B008,  # Do not perform function calls in argument defaults.  The call is performed only once at function definition time. All calls to your function will reuse the result of that definition-time function call.  If this is intended, assign the function call to a module-level variable and use that variable as a default value.
  B010,  # Do not call setattr with a constant attribute value, it is not any safer than normal property access.
  B014,  # Redundant exception types in `except (ImportError, ModuleNotFoundError) as e:`.  Write `except ImportError as e:`, which catches exactly the same exceptions.
  C405,  # Unnecessary list literal - rewrite as a set literal.
  C408,  # Unnecessary dict call - rewrite as a literal.
  C812,  # missing trailing comma
  C813,  # missing trailing comma in Python 3
  C815,  # missing trailing comma in Python 3.5+
  C816,  # missing trailing comma in Python 3.6+
  DAR101,
  DAR201,
  DAR301,
  DAR401,
  E800,
  N806,
  P101,
  P103,
  WPS,

# Allow certain violations in certain files:
per-file-ignores =
  # There are multiple `assert`s (S101)
  # and subprocesses (import – S404; call – S603) in tests;
  # plus, some of the rules may have embeded tests;
  # also, using fixtures looks like shadowing the outer scope (WPS442);
  # and finally it's impossible to have <= members in tests (WPS202):
  src/ansiblelint/rules/**.py: S101
  src/ansiblelint/testing/__init__.py: S404, S603
  src/ansiblelint/testing/fixtures.py: S101
  test/**.py: S101, S404, S603, WPS202, WPS442

  # FIXME: D100 Missing docstring in public module
  # FIXME: D101 Missing docstring in public class
  # FIXME: D102 Missing docstring in public method
  # FIXME: drop these once they're made simpler
  # Ref: https://github.com/ansible-community/ansible-lint/issues/744
  src/ansiblelint/cli.py: D101 D102
  src/ansiblelint/formatters/__init__.py: D101 D102
  src/ansiblelint/rules/*.py: D100 D101 D102
  src/ansiblelint/rules/__init__.py: D100 D101 D102
  src/ansiblelint/rules/BecomeUserWithoutBecomeRule.py: D100 D101 D102
  src/ansiblelint/rules/CommandHasChangesCheckRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/CommandsInsteadOfArgumentsRule.py: D100 D101 D102
  src/ansiblelint/rules/CommandsInsteadOfModulesRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/ComparisonToEmptyStringRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/ComparisonToLiteralBoolRule.py: D100 D101 D102
  src/ansiblelint/rules/DeprecatedModuleRule.py: D100 D101 D102
  src/ansiblelint/rules/EnvVarsInCommandRule.py: D100 D101 D102
  src/ansiblelint/rules/FQCNBuiltinsRule.py: D101 D102 S101
  src/ansiblelint/rules/GitHasVersionRule.py: D100 D101 D102
  src/ansiblelint/rules/IgnoreErrorsRule.py: D102 S101
  src/ansiblelint/rules/MercurialHasRevisionRule.py: D100 D101 D102
  src/ansiblelint/rules/MetaChangeFromDefaultRule.py: D100 D101 D102
  src/ansiblelint/rules/MetaMainHasInfoRule.py: D100 D101 D102
  src/ansiblelint/rules/MetaTagValidRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/MetaVideoLinksRule.py: D100 D101 D102
  src/ansiblelint/rules/MissingFilePermissionsRule.py: D101 D102 S101
  src/ansiblelint/rules/NestedJinjaRule.py: D100 D101 D102
  src/ansiblelint/rules/NoFormattingInWhenRule.py: D100 D101 D102
  src/ansiblelint/rules/NoLogPasswordsRule.py: D102 S101
  src/ansiblelint/rules/NoSameOwnerRule.py: D101 S101
  src/ansiblelint/rules/NoTabsRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/OctalPermissionsRule.py: D100 D101 D102
  src/ansiblelint/rules/PackageIsNotLatestRule.py: D100 D101 D102
  src/ansiblelint/rules/PlaybookExtension.py: D100 D101 D102
  src/ansiblelint/rules/RoleNames.py: D100 D101 D102
  src/ansiblelint/rules/RoleRelativePath.py: D100 D101 D102
  src/ansiblelint/rules/ShellWithoutPipefail.py: D100 D101 D102
  src/ansiblelint/rules/TaskHasNameRule.py: D100 D101 D102
  src/ansiblelint/rules/TaskNoLocalAction.py: D100 D101 D102
  src/ansiblelint/rules/UseCommandInsteadOfShellRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/UseHandlerRatherThanWhenChangedRule.py: D101 D102 S101
  src/ansiblelint/rules/UsingBareVariablesIsDeprecatedRule.py: D100 D101 D102
  src/ansiblelint/rules/VariableHasSpacesRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/VariableNamingRule.py: D100 D101 D102 S101
  src/ansiblelint/rules/YamllintRule.py: D100 D101

  # FIXME: drop these once they're fixed
  # Ref: https://github.com/ansible-community/ansible-lint/issues/725
  test/__init__.py: D102
  test/conftest.py: D100
  test/rules/EMatcherRule.py: D100 D101 D102
  test/rules/UnsetVariableMatcherRule.py: D100 D101 D102
  test/TestAnsibleLintRule.py: D100 S101
  test/TestBaseFormatter.py: D100 S101
  test/TestBecomeUserWithoutBecome.py: D100 D101 D102 S101
  test/TestCliRolePaths.py: D100 D101 D102 S101
  test/TestCommandLineInvocationSameAsConfig.py: D100 S101
  test/TestCommandHasChangesCheck.py: D100 D101 D102 S101
  test/TestComparisonToLiteralBool.py: D100 D101 D102 S101
  test/TestDependenciesInMeta.py: D100 S101
  test/TestDeprecatedModule.py: D100 D101 D102 S101
  test/TestEnvVarsInCommand.py: D100 D101 D102 S101
  test/TestFormatter.py: D100 D101 D102
  test/TestImportIncludeRole.py: D100 S101
  test/TestImportWithMalformed.py: D100 S101
  test/TestIncludeMissFileWithRole.py: D100 S101
  test/TestLineTooLong.py: D100 D101 D102 S101
  test/TestLintRule.py: D100 D101 D102 S101
  test/TestNestedJinjaRule.py: D100 S101
  test/TestMatchError.py: D101 S101
  test/TestMetaChangeFromDefault.py: D100 D101 D102 S101
  test/TestMetaMainHasInfo.py: D100 D101 D102 S101
  test/TestMetaVideoLinks.py: D100 D101 D102 S101
  test/TestNoFormattingInWhenRule.py: D100 D101 D102 S101
  test/TestOctalPermissions.py: D100 D101 D102 S101
  test/TestPackageIsNotLatest.py: D100 D101 D102 S101
  test/TestRoleRelativePath.py: D100 D101 D102 S101
  test/TestRuleProperties.py: D100 S101
  test/TestRulesCollection.py: D100 S101
  test/TestRunner.py: D100 S101
  test/TestShellWithoutPipefail.py: D100 D101 D102 S101
  test/TestSkipImportPlaybook.py: D100 S101
  test/TestSkipInsideYaml.py: D100 S101
  test/TestSkipPlaybookItems.py: D100 S101
  test/TestTaskHasName.py: D100 D101 D102 S101
  test/TestTaskIncludes.py: D100 S101
  test/TestTaskNoLocalAction.py: D100 D101 D102 S101
  test/TestUseHandlerRatherThanWhenChanged.py: D100 D101 D102 S101
  test/TestUsingBareVariablesIsDeprecated.py: D100 D101 D102 S101
  test/TestWithSkipTagId.py: D100 D101 D102 S101

# flake8-eradicate
# E800:
eradicate-whitelist-extend = isort:\s+\w+

# flake8-pytest-style
# PT001:
pytest-fixture-no-parentheses = true
# PT006:
pytest-parametrize-names-type = tuple
# PT007:
pytest-parametrize-values-type = tuple
pytest-parametrize-values-row-type = tuple

# flake8-quotes
avoid-escape = true
inline-quotes = '
multiline-quotes = """
