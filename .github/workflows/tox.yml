name: gh

on:
  create:  # is used for publishing to PyPI and TestPyPI
    tags:  # any tag regardless of its name, no branches
    - "**"
  push:  # only publishes pushes to the main branch to TestPyPI
    branches:  # any integration branch but not tag
    - "main"
  pull_request:
  release:
    types:
    - published  # It seems that you can publish directly without creating
  schedule:
  - cron: 1 0 * * *  # Run daily at 0:01 UTC
  # Run every Friday at 18:02 UTC
  # https://crontab.guru/#2_18_*_*_5
  # - cron: 2 18 * * 5

jobs:
  linters:
    name: >-
      ${{ matrix.env.TOXENV }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - 3.9
        os:
        - ubuntu-20.04
        env:
        - TOXENV: lint
        - TOXENV: docs
        - TOXENV: linkcheck-docs
        - TOXENV: eco
        - TOXENV: packaging
    env:
      TOX_PARALLEL_NO_SPINNER: 1
      FORCE_COLOR: 1

    steps:
    - name: Check out src from Git
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # needed by setuptools-scm
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    # - name: set PY_SHA256
    #   run: echo "::set-env name=PY_SHA256::$(python -VV | sha256sum | cut -d' ' -f1)"
    # - name: Pre-commit cache
    #   uses: actions/cache@v1
    #   with:
    #     path: ~/.cache/pre-commit
    #     key: ${{ runner.os }}-pre-commit-${{ env.PY_SHA256 }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('pytest.ini') }}
    # - name: Pip cache
    #   uses: actions/cache@v1
    #   with:
    #     path: ~/.cache/pip
    #     key: ${{ runner.os }}-pip-${{ env.PY_SHA256 }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('pytest.ini') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-
    #       ${{ runner.os }}-
    - name: Install tox
      run: |
        python3 -m pip install --upgrade tox
    - name: Log installed dists
      run: >-
        python -m pip freeze --all
    - name: >-
        Initialize tox envs
      run: >-
        python -m
        tox
        --parallel auto
        --parallel-live
        --notest
        --skip-missing-interpreters false
        -vv
      env: ${{ matrix.env }}
    - name: Test with tox
      run: |
        python -m tox --parallel auto --parallel-live
      env: ${{ matrix.env }}
    - name: Archive logs
      uses: actions/upload-artifact@v2
      with:
        name: logs.zip
        path: .tox/**/log/

  unit:
    name: >-
      ${{ matrix.tox_env }}@${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # fail-fast: false
      # max-parallel: 5
      # The matrix testing goal is to cover the *most likely* environments
      # which are expected to be used by users in production. Avoid adding a
      # combination unless there are good reasons to test it, like having
      # proof that we failed to catch a bug by not running it. Using
      # distribution should be prefferred instead of custom builds.
      matrix:
        python-version:
        # keep list sorted as it determines UI order too
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        # NOTE: Installing ansible under 3.10-dev is currently not
        # NOTE: possible because compiling cffi explodes.
        os:
        # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
        - ubuntu-20.04
        # - windows-latest
        # - windows-2016
        include:
        - tox_env: py36
          os: ubuntu-20.04
          python-version: 3.6
        - tox_env: py37
          os: ubuntu-20.04
          python-version: 3.7
        - tox_env: py38
          os: ubuntu-20.04
          python-version: 3.8
          devel: true
        - tox_env: py39
          os: ubuntu-20.04
          python-version: 3.9
          devel: true
        - tox_env: py36
          os: macOS-latest
          python-version: 3.6
        - tox_env: py38
          os: macOS-latest
          python-version: 3.8

    env:
      TOX_PARALLEL_NO_SPINNER: 1
      FORCE_COLOR: 1

    steps:
    - name: MacOS workaround for https://github.com/actions/virtual-environments/issues/1187
      if: ${{ matrix.os == 'macOS-latest' }}
      run: |
        sudo sysctl -w net.link.generic.system.hwcksum_tx=0
        sudo sysctl -w net.link.generic.system.hwcksum_rx=0
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # needed by setuptools-scm
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: >-
        Log the currently selected Python
        version info (${{ matrix.python-version }})
      run: |
        python --version --version
        which python
    # - name: Pip cache
    #   uses: actions/cache@v1
    #   with:
    #     path: ~/.cache/pip
    #     key: ${{ runner.os }}-pip-${{ env.PY_SHA256 }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('tox.ini') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.pre-commit-config.yaml') }}-${{ hashFiles('pytest.ini') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-
    #       ${{ runner.os }}-
    - name: Install tox
      run: |
        python3 -m pip install --upgrade tox
    - name: Log installed dists
      run: >-
        python3 -m pip freeze --all
    - name: >-
        Initialize tox envs
      run: >-
        python3 -m
        tox
        --parallel auto
        --parallel-live
        --notest
        --skip-missing-interpreters false
        -vv
      env:
        TOXENV: ${{ matrix.tox_env }}-core,${{ matrix.tox_env }}-ansible29
    # sequential run improves browsing experience (almost no speed impact)
    - name: "Test with tox: ${{ matrix.tox_env }}-core"
      run: |
        python3 -m tox
      env:
        TOXENV: ${{ matrix.tox_env }}-core
    - name: "Test with tox: ${{ matrix.tox_env }}-ansible29"
      run: |
        python3 -m tox
      env:
        TOXENV: ${{ matrix.tox_env }}-ansible29
    - name: "Test with tox: ${{ matrix.tox_env }}-devel"
      if: ${{ matrix.devel }}
      run: |
        python3 -m tox
      env:
        TOXENV: ${{ matrix.tox_env }}-devel
    - name: Archive logs
      uses: actions/upload-artifact@v2
      with:
        name: logs.zip
        path: .tox/**/log/
      # https://github.com/actions/upload-artifact/issues/123
      continue-on-error: true
    - name: Report junit failures
      uses: shyim/junit-report-annotations-action@3d2e5374f2b13e70f6f3209a21adfdbc42c466ae
      with:
        path: .tox/junit.*.xml
      if: always()
