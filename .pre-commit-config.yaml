---
ci:
  # format compatible with commitlint
  autoupdate_commit_msg: "chore: pre-commit autoupdate"
  autoupdate_schedule: monthly
  autofix_commit_msg: "chore: auto fixes from pre-commit.com hooks"
  skip:
    # https://github.com/pre-commit-ci/issues/issues/55
    - pyright
    - tombi-format
    - tombi-lint
    - schemas
  submodules: true
exclude: >
  (?x)^(
    examples/broken/encoding.yml|
    examples/broken/encoding.j2|
    examples/broken/yaml-with-tabs/invalid-due-tabs.yaml|
    examples/broken/load-failure-invalid.yml|
    examples/playbooks/collections/.*|
    examples/playbooks/vars/empty.transformed.yml|
    examples/playbooks/vars/empty.yml|
    src/ansiblelint/schemas/rulebook.json|
    test/schemas/data/licenses.json|
    test/schemas/negative_test|
    test/schemas/package-lock.json
  )$
repos:
  - repo: meta
    hooks:
      - id: check-useless-excludes
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.8.23
    hooks:
      - id: uv-sync
      - id: uv-lock
      - id: uv-lock
        name: "deps: upgrade via uv sync --upgrade"
        alias: deps
        args: ["--upgrade"]
        stages: [manual]
      - id: uv-export
        name: "deps: regenerate requirements-lock.txt for actions"
        args:
          - "--no-dev"
          - "--no-emit-package"
          - ansible-core
          - "--no-emit-package"
          - resolvelib
          - "--no-emit-package"
          - ruamel-yaml-clib
          - "--no-emit-package"
          - tomli
          - "--no-emit-package"
          - typing-extensions
          - "--no-emit-project"
          - "--no-hashes"
          - "-o"
          - ".config/requirements-lock.txt"
  - repo: https://github.com/biomejs/pre-commit
    rev: "v2.2.5"
    hooks:
      - id: biome-check
        name: biome
        alias: biome
        args: [--unsafe]
  - repo: https://github.com/streetsidesoftware/cspell-cli
    rev: v9.2.0
    hooks:
      - id: cspell
        entry: bash
        pass_filenames: false
        args:
          [
            "-euo",
            "pipefail",
            "-c",
            "cspell-cli . --relative --no-progress --no-summary && cspell-cli . --disable-dictionary=words --no-exit-code --words-only --quiet --unique | LC_ALL=C sort > .config/dictionary.txt",
          ]
        name: cspell + remove unused and sort dictionary
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.34.0
    hooks:
      - id: check-github-workflows
  - repo: https://github.com/pre-commit/pre-commit-hooks.git
    rev: v6.0.0
    hooks:
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-symlinks
      - id: debug-statements
      - id: detect-private-key
      - id: end-of-file-fixer
        # ignore formatting-prettier to have an accurate prettier comparison
        exclude: >
          (?x)^(
            test/eco/.*.result|
            examples/yamllint/.*|
            test/fixtures/formatting-before/.*|
            test/fixtures/formatting-prettier/.*
          )$
      - id: trailing-whitespace
        exclude: >
          (?x)^(
            examples/playbooks/(with-skip-tag-id|unicode).yml|
            examples/playbooks/example.yml|
            examples/yamllint/.*|
            test/eco/.*.result|
            test/fixtures/formatting-before/.*
          )$
      - id: mixed-line-ending
      - id: fix-byte-order-marker
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: debug-statements
        language_version: python3
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        exclude: >
          (?x)^(
            .config/dictionary.txt|
            examples/broken/encoding.j2|
            test/schemas/negative_test/.*|
            test/schemas/test/.*|
            src/ansiblelint/schemas/.*\.json
          )$
        additional_dependencies:
          - tomli
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.37.1
    hooks:
      - id: yamllint
        exclude: >
          (?x)^(
            examples/playbooks/templates/.*|
            examples/yamllint/.*|
            examples/other/some.j2.yaml|
            examples/playbooks/collections/.*|
            test/fixtures/formatting-before/.*
          )$
        files: \.(yaml|yml)$
        types: [file, yaml]
        entry: yamllint --strict

  - repo: https://github.com/tombi-toml/tombi-pre-commit
    rev: v0.6.21
    hooks:
      - id: tombi-format
        alias: toml
      - id: tombi-lint
        alias: toml

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.3
    hooks:
      - id: ruff-format
        alias: ruff
      - id: ruff-check
        alias: ruff
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.18.2
    hooks:
      - id: mypy
        # "." and pass_files are used to make pre-commit mypy behave the same as standalone mypy
        args: ["."]
        pass_filenames: false
        additional_dependencies: &deps
          - ansible-compat>=25.8.0
          - black>=22.10.0
          - cryptography>=39.0.1
          - filelock>=3.12.2
          - importlib_metadata
          - jinja2
          - license-expression >= 30.3.0
          - pip>=22.3.1
          - pytest-mock
          - pytest>=7.2.2
          - pyyaml>=6.0.2 # types-PyYAML is not enough
          - ruamel-yaml-clib>=0.2.8
          - ruamel-yaml>=0.18.6
          - subprocess-tee
          - types-jsonschema>=4.20.0.0
          - types-setuptools
          - wcmatch
          - yamllint>=1.34.0
  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.406
    hooks:
      - id: pyright
        additional_dependencies: *deps
  - repo: https://github.com/pycqa/pylint
    rev: v3.3.8
    hooks:
      - id: pylint
        args:
          - --output-format=colorized
        additional_dependencies: *deps
  - repo: https://github.com/jendrikseipp/vulture
    rev: v2.14
    hooks:
      - id: vulture
  - # keep at bottom as these are slower
    repo: local
    hooks:
      - id: schemas
        name: update json schemas
        entry: python3 src/ansiblelint/schemas/__main__.py
        language: python
        pass_filenames: false
        always_run: true
        # stages: [manual]
